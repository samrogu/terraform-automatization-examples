{
  "version": 4,
  "terraform_version": "1.1.8",
  "serial": 1,
  "lineage": "409d8a36-32f1-c7b9-e67d-c0d8469ef358",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "jenkins",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "jenkins",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "jenkinsci",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.332.2",
                "chart": "jenkins",
                "name": "jenkinsci",
                "namespace": "default",
                "revision": 1,
                "values": "{\"additionalAgents\":{},\"agent\":{\"TTYEnabled\":false,\"alwaysPullImage\":false,\"annotations\":{},\"args\":\"${computer.jnlpmac} ${computer.name}\",\"command\":null,\"componentName\":\"jenkins-agent\",\"connectTimeout\":100,\"containerCap\":10,\"customJenkinsLabels\":[],\"defaultsProviderTemplate\":\"\",\"enabled\":true,\"envVars\":[],\"idleMinutes\":0,\"image\":\"jenkins/inbound-agent\",\"imagePullSecretName\":null,\"jenkinsTunnel\":null,\"jenkinsUrl\":null,\"kubernetesConnectTimeout\":5,\"kubernetesReadTimeout\":15,\"maxRequestsPerHostStr\":\"32\",\"namespace\":null,\"nodeSelector\":{},\"nodeUsageMode\":\"NORMAL\",\"podName\":\"default\",\"podRetention\":\"Never\",\"podTemplates\":{},\"privileged\":false,\"resources\":{\"limits\":{\"cpu\":\"512m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"512m\",\"memory\":\"512Mi\"}},\"runAsGroup\":null,\"runAsUser\":null,\"showRawYaml\":true,\"sideContainerName\":\"jnlp\",\"tag\":\"4.11.2-4\",\"volumes\":[],\"websocket\":false,\"workingDir\":\"/home/jenkins/agent\",\"workspaceVolume\":{},\"yamlMergeStrategy\":\"override\",\"yamlTemplate\":\"\"},\"awsSecurityGroupPolicies\":{\"enabled\":false,\"policies\":[{\"name\":\"\",\"podSelector\":{},\"securityGroupIds\":[]}]},\"backup\":{\"activeDeadlineSeconds\":\"\",\"componentName\":\"backup\",\"destination\":\"s3://jenkins-data/backup\",\"enabled\":false,\"env\":[],\"existingSecret\":{},\"extraArgs\":[],\"fsGroup\":1000,\"image\":{\"repository\":\"maorfr/kube-tasks\",\"tag\":\"0.2.0\"},\"labels\":{},\"onlyJobs\":false,\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"1Gi\"},\"requests\":{\"cpu\":1,\"memory\":\"1Gi\"}},\"runAsUser\":1000,\"schedule\":\"0 2 * * *\",\"securityContextCapabilities\":{},\"serviceAccount\":{\"annotations\":{},\"create\":true,\"name\":null},\"usePodSecurityContext\":true},\"checkDeprecation\":true,\"clusterZone\":\"cluster.local\",\"controller\":{\"JCasC\":{\"authorizationStrategy\":\"loggedInUsersCanDoAnything:\\n  allowAnonymousRead: false\",\"configScripts\":{},\"defaultConfig\":true,\"securityRealm\":\"local:\\n  allowsSignup: false\\n  enableCaptcha: false\\n  users:\\n  - id: \\\"${chart-admin-username}\\\"\\n    name: \\\"Jenkins Admin\\\"\\n    password: \\\"${chart-admin-password}\\\"\"},\"additionalExistingSecrets\":[],\"additionalPlugins\":[],\"additionalSecrets\":[],\"admin\":{\"existingSecret\":\"\",\"passwordKey\":\"jenkins-admin-password\",\"userKey\":\"jenkins-admin-user\"},\"adminSecret\":true,\"adminUser\":\"admin\",\"affinity\":{},\"agentListenerEnabled\":true,\"agentListenerExternalTrafficPolicy\":null,\"agentListenerHostPort\":null,\"agentListenerLoadBalancerIP\":null,\"agentListenerLoadBalancerSourceRanges\":[\"0.0.0.0/0\"],\"agentListenerNodePort\":null,\"agentListenerPort\":50000,\"agentListenerServiceAnnotations\":{},\"agentListenerServiceType\":\"NodePort\",\"backendconfig\":{\"annotations\":{},\"apiVersion\":\"extensions/v1beta1\",\"enabled\":false,\"labels\":{},\"name\":null,\"spec\":{}},\"cloudName\":\"kubernetes\",\"componentName\":\"jenkins-controller\",\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsGroup\":1000,\"runAsUser\":1000},\"csrf\":{\"defaultCrumbIssuer\":{\"enabled\":true,\"proxyCompatability\":true}},\"customInitContainers\":[],\"customJenkinsLabels\":[],\"disableRememberMe\":false,\"disabledAgentProtocols\":[\"JNLP-connect\",\"JNLP2-connect\"],\"enableRawHtmlMarkupFormatter\":false,\"executorMode\":\"NORMAL\",\"extraPorts\":[],\"fsGroup\":1000,\"healthProbes\":true,\"hostAliases\":[],\"hostNetworking\":false,\"httpsKeyStore\":{\"enable\":false,\"fileName\":\"keystore.jks\",\"httpPort\":8081,\"jenkinsHttpsJksSecretName\":\"\",\"jenkinsKeyStoreBase64Encoded\":\"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\\n\",\"password\":\"password\",\"path\":\"/var/jenkins_keystore\"},\"image\":\"jenkins/jenkins\",\"imagePullPolicy\":\"Always\",\"imagePullSecretName\":null,\"ingress\":{\"annotations\":{},\"apiVersion\":\"extensions/v1beta1\",\"enabled\":false,\"hostName\":null,\"labels\":{},\"paths\":[],\"tls\":null},\"initScripts\":[],\"initializeOnce\":false,\"installLatestPlugins\":true,\"installLatestSpecifiedPlugins\":false,\"installPlugins\":[\"kubernetes:latest\",\"workflow-aggregator:latest\",\"git:latest\",\"configuration-as-code:latest\"],\"jenkinsHome\":\"/var/jenkins_home\",\"jenkinsRef\":\"/usr/share/jenkins/ref\",\"jenkinsWar\":\"/usr/share/jenkins/jenkins.war\",\"lifecycle\":null,\"loadBalancerSourceRanges\":[\"0.0.0.0/0\"],\"markupFormatter\":\"plainText\",\"nodeSelector\":{},\"numExecutors\":0,\"overwritePluginsFromImage\":true,\"podAnnotations\":{},\"podDisruptionBudget\":{\"annotations\":{},\"apiVersion\":\"policy/v1beta1\",\"enabled\":false,\"labels\":{}},\"podLabels\":{},\"priorityClassName\":null,\"probes\":{\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"{{ default \\\"\\\" .Values.controller.jenkinsUriPrefix }}/login\",\"port\":\"http\"},\"periodSeconds\":10,\"timeoutSeconds\":5},\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"{{ default \\\"\\\" .Values.controller.jenkinsUriPrefix }}/login\",\"port\":\"http\"},\"periodSeconds\":10,\"timeoutSeconds\":5},\"startupProbe\":{\"failureThreshold\":12,\"httpGet\":{\"path\":\"{{ default \\\"\\\" .Values.controller.jenkinsUriPrefix }}/login\",\"port\":\"http\"},\"periodSeconds\":10,\"timeoutSeconds\":5}},\"prometheus\":{\"alertingRulesAdditionalLabels\":{},\"alertingrules\":[],\"enabled\":false,\"prometheusRuleNamespace\":\"\",\"scrapeEndpoint\":\"/prometheus\",\"scrapeInterval\":\"60s\",\"serviceMonitorAdditionalLabels\":{}},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"3Gi\"},\"requests\":{\"cpu\":\"1\",\"memory\":\"3Gi\"}},\"route\":{\"annotations\":{},\"enabled\":false,\"labels\":{}},\"runAsUser\":1000,\"schedulerName\":\"\",\"scriptApproval\":[],\"secondaryingress\":{\"annotations\":{},\"apiVersion\":\"extensions/v1beta1\",\"enabled\":false,\"hostName\":null,\"labels\":{},\"paths\":[],\"tls\":null},\"secretClaims\":[],\"securityContextCapabilities\":{},\"serviceAnnotations\":{},\"serviceExternalTrafficPolicy\":null,\"serviceLabels\":{},\"servicePort\":8080,\"serviceType\":\"NodePort\",\"sidecars\":{\"configAutoReload\":{\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true},\"enabled\":true,\"folder\":\"/var/jenkins_home/casc_configs\",\"image\":\"kiwigrid/k8s-sidecar:1.15.0\",\"imagePullPolicy\":\"IfNotPresent\",\"reqRetryConnect\":10,\"resources\":{},\"sshTcpPort\":1044},\"other\":[]},\"statefulSetAnnotations\":{},\"statefulSetLabels\":{},\"tagLabel\":\"jdk11\",\"targetPort\":8080,\"terminationGracePeriodSeconds\":null,\"terminationMessagePath\":null,\"terminationMessagePolicy\":null,\"testEnabled\":true,\"tolerations\":[],\"updateStrategy\":{},\"usePodSecurityContext\":true},\"networkPolicy\":{\"apiVersion\":\"networking.k8s.io/v1\",\"enabled\":false,\"externalAgents\":{},\"internalAgents\":{\"allowed\":true,\"namespaceLabels\":{},\"podLabels\":{}}},\"persistence\":{\"accessMode\":\"ReadWriteOnce\",\"annotations\":{},\"enabled\":true,\"existingClaim\":\"eks-efs-pvc\",\"labels\":{},\"mounts\":null,\"size\":\"5Gi\",\"storageClass\":null,\"volumes\":null},\"rbac\":{\"create\":true,\"readSecrets\":false},\"renderHelmLabels\":true,\"serviceAccount\":{\"annotations\":{},\"create\":true,\"imagePullSecretName\":null,\"name\":\"jenkins\"},\"serviceAccountAgent\":{\"annotations\":{},\"create\":false,\"imagePullSecretName\":null,\"name\":null}}",
                "version": "3.11.10"
              }
            ],
            "name": "jenkinsci",
            "namespace": "default",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jenkins.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "rbac.create",
                "type": "",
                "value": "true"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for jenkins.\n# This is a YAML-formatted file.\n# Declare name/value pairs to be passed into your templates.\n# name: value\n\n## Overrides for generated resource names\n# See templates/_helpers.tpl\n# nameOverride:\n# fullnameOverride:\n# namespaceOverride:\n\n# For FQDN resolving of the controller service. Change this value to match your existing configuration.\n# ref: https://github.com/kubernetes/dns/blob/master/docs/specification.md\nclusterZone: \"cluster.local\"\n\nrenderHelmLabels: true\n\ncontroller:\n  # Used for label app.kubernetes.io/component\n  componentName: \"jenkins-controller\"\n  image: \"jenkins/jenkins\"\n  # tag: \"2.332.1-jdk11\"\n  tagLabel: jdk11\n  imagePullPolicy: \"Always\"\n  imagePullSecretName:\n  # Optionally configure lifetime for controller-container\n  lifecycle:\n  #  postStart:\n  #    exec:\n  #      command:\n  #      - \"uname\"\n  #      - \"-a\"\n  disableRememberMe: false\n  numExecutors: 0\n  # configures the executor mode of the Jenkins node. Possible values are: NORMAL or EXCLUSIVE\n  executorMode: \"NORMAL\"\n  # This is ignored if enableRawHtmlMarkupFormatter is true\n  markupFormatter: plainText\n  customJenkinsLabels: []\n  # The default configuration uses this secret to configure an admin user\n  # If you don't need that user or use a different security realm then you can disable it\n  adminSecret: true\n\n  hostNetworking: false\n  # When enabling LDAP or another non-Jenkins identity source, the built-in admin account will no longer exist.\n  # If you disable the non-Jenkins identity store and instead use the Jenkins internal one,\n  # you should revert controller.adminUser to your preferred admin user:\n  adminUser: \"admin\"\n  # adminPassword: \u003cdefaults to random\u003e\n  admin:\n    existingSecret: \"\"\n    userKey: jenkins-admin-user\n    passwordKey: jenkins-admin-password\n  # This values should not be changed unless you use your custom image of jenkins or any devired from. If you want to use\n  # Cloudbees Jenkins Distribution docker, you should set jenkinsHome: \"/var/cloudbees-jenkins-distribution\"\n  jenkinsHome: \"/var/jenkins_home\"\n  # This values should not be changed unless you use your custom image of jenkins or any devired from. If you want to use\n  # Cloudbees Jenkins Distribution docker, you should set jenkinsRef: \"/usr/share/cloudbees-jenkins-distribution/ref\"\n  jenkinsRef: \"/usr/share/jenkins/ref\"\n  # Path to the jenkins war file which is used by jenkins-plugin-cli.\n  jenkinsWar: \"/usr/share/jenkins/jenkins.war\"\n  # Overrides the default arguments passed to the war\n  # overrideArgs:\n  #   - --httpPort=8080\n  resources:\n    requests:\n      cpu: \"1\"\n      memory: \"3Gi\"\n    limits:\n      cpu: \"1\"\n      memory: \"3Gi\"\n  # Overrides the init container default values\n  # initContainerResources:\n  #   requests:\n  #     cpu: \"50m\"\n  #     memory: \"256Mi\"\n  #   limits:\n  #     cpu: \"2000m\"\n  #     memory: \"4096Mi\"\n  # Environment variables that get added to the init container (useful for e.g. http_proxy)\n  # initContainerEnv:\n  #   - name: http_proxy\n  #     value: \"http://192.168.64.1:3128\"\n  # containerEnv:\n  #   - name: http_proxy\n  #     value: \"http://192.168.64.1:3128\"\n  # Set min/max heap here if needed with:\n  # javaOpts: \"-Xms512m -Xmx512m\"\n  # jenkinsOpts: \"\"\n  # If you are using the ingress definitions provided by this chart via the `controller.ingress` block the configured hostname will be the ingress hostname starting with `https://` or `http://` depending on the `tls` configuration.\n  # The Protocol can be overwritten by specifying `controller.jenkinsUrlProtocol`.\n  # jenkinsUrlProtocol: \"https\"\n  # If you are not using the provided ingress you can specify `controller.jenkinsUrl` to change the url definition.\n  # jenkinsUrl: \"\"\n  # If you set this prefix and use ingress controller then you might want to set the ingress path below\n  # jenkinsUriPrefix: \"/jenkins\"\n  # Enable pod security context (must be `true` if podSecurityContextOverride, runAsUser or fsGroup are set)\n  usePodSecurityContext: true\n  # Note that `runAsUser`, `fsGroup`, and `securityContextCapabilities` are\n  # being deprecated and replaced by `podSecurityContextOverride`.\n  # Set runAsUser to 1000 to let Jenkins run as non-root user 'jenkins' which exists in 'jenkins/jenkins' docker image.\n  # When setting runAsUser to a different value than 0 also set fsGroup to the same value:\n  runAsUser: 1000\n  fsGroup: 1000\n  # If you have PodSecurityPolicies that require dropping of capabilities as suggested by CIS K8s benchmark, put them here\n  securityContextCapabilities: {}\n  #  drop:\n  #    - NET_RAW\n  # Completely overwrites the contents of the `securityContext`, ignoring the\n  # values provided for the deprecated fields: `runAsUser`, `fsGroup`, and\n  # `securityContextCapabilities`.  In the case of mounting an ext4 filesystem,\n  # it might be desirable to use `supplementalGroups` instead of `fsGroup` in\n  # the `securityContext` block: https://github.com/kubernetes/kubernetes/issues/67014#issuecomment-589915496\n  # podSecurityContextOverride:\n  #   runAsUser: 1000\n  #   runAsNonRoot: true\n  #   supplementalGroups: [1000]\n  #   # capabilities: {}\n  # Container securityContext\n  containerSecurityContext:\n    runAsUser: 1000\n    runAsGroup: 1000\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n  servicePort: 8080\n  targetPort: 8080\n  # For minikube, set this to NodePort, elsewhere use LoadBalancer\n  # Use ClusterIP if your setup includes ingress controller\n  serviceType: NodePort\n  # Use Local to preserve the client source IP and avoids a second hop for LoadBalancer and Nodeport type services,\n  # but risks potentially imbalanced traffic spreading.\n  serviceExternalTrafficPolicy:\n  # Jenkins controller service annotations\n  serviceAnnotations: {}\n  # Jenkins controller custom labels\n  statefulSetLabels: {}\n  #   foo: bar\n  #   bar: foo\n  # Jenkins controller service labels\n  serviceLabels: {}\n  #   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: https\n  # Put labels on Jenkins controller pod\n  podLabels: {}\n  # Used to create Ingress record (should used with ServiceType: ClusterIP)\n  # nodePort: \u003cto set explicitly, choose port between 30000-32767\n  # Enable Kubernetes Startup, Liveness and Readiness Probes\n  # if Startup Probe is supported, enable it too\n  # ~ 2 minutes to allow Jenkins to restart when upgrading plugins. Set ReadinessTimeout to be shorter than LivenessTimeout.\n  healthProbes: true\n  probes:\n    startupProbe:\n      httpGet:\n        path: '{{ default \"\" .Values.controller.jenkinsUriPrefix }}/login'\n        port: http\n      periodSeconds: 10\n      timeoutSeconds: 5\n      failureThreshold: 12\n    livenessProbe:\n      failureThreshold: 5\n      httpGet:\n        path: '{{ default \"\" .Values.controller.jenkinsUriPrefix }}/login'\n        port: http\n      periodSeconds: 10\n      timeoutSeconds: 5\n      # If Startup Probe is not supported on your Kubernetes cluster, you might want to use \"initialDelaySeconds\" instead.\n      # It delays the initial liveness probe while Jenkins is starting\n      # initialDelaySeconds: 60\n    readinessProbe:\n      failureThreshold: 3\n      httpGet:\n        path: '{{ default \"\" .Values.controller.jenkinsUriPrefix }}/login'\n        port: http\n      periodSeconds: 10\n      timeoutSeconds: 5\n      # If Startup Probe is not supported on your Kubernetes cluster, you might want to use \"initialDelaySeconds\" instead.\n      # It delays the initial readyness probe while Jenkins is starting\n      # initialDelaySeconds: 60\n\n  # PodDisruptionBudget config\n  podDisruptionBudget:\n    enabled: false\n    # For Kubernetes v1.5+, use 'policy/v1beta1'\n    # For Kubernetes v1.21+, use 'policy/v1'\n    apiVersion: \"policy/v1beta1\"\n    annotations: {}\n    labels: {}\n    # maxUnavailable: \"0\"\n\n  agentListenerEnabled: true\n  agentListenerPort: 50000\n  agentListenerHostPort:\n  agentListenerNodePort:\n  agentListenerExternalTrafficPolicy:\n  agentListenerLoadBalancerSourceRanges:\n  - 0.0.0.0/0\n  disabledAgentProtocols:\n    - JNLP-connect\n    - JNLP2-connect\n  csrf:\n    defaultCrumbIssuer:\n      enabled: true\n      proxyCompatability: true\n  # Kubernetes service type for the JNLP agent service\n  # agentListenerServiceType is the Kubernetes Service type for the JNLP agent service,\n  # either 'LoadBalancer', 'NodePort', or 'ClusterIP'\n  # Note if you set this to 'LoadBalancer', you *must* define annotations to secure it. By default\n  # this will be an external load balancer and allowing inbound 0.0.0.0/0, a HUGE\n  # security risk:  https://github.com/kubernetes/charts/issues/1341\n  agentListenerServiceType: \"NodePort\"\n  # Optionally assign an IP to the LoadBalancer agentListenerService LoadBalancer\n  # GKE users: only regional static IPs will work for Service Load balancer.\n  agentListenerLoadBalancerIP:\n  agentListenerServiceAnnotations: {}\n\n  # Example of 'LoadBalancer' type of agent listener with annotations securing it\n  # agentListenerServiceType: LoadBalancer\n  # agentListenerServiceAnnotations:\n  #   service.beta.kubernetes.io/aws-load-balancer-internal: \"True\"\n  #   service.beta.kubernetes.io/load-balancer-source-ranges: \"172.0.0.0/8, 10.0.0.0/8\"\n\n  # LoadBalancerSourcesRange is a list of allowed CIDR values, which are combined with ServicePort to\n  # set allowed inbound rules on the security group assigned to the controller load balancer\n  loadBalancerSourceRanges:\n  - 0.0.0.0/0\n  # Optionally assign a known public LB IP\n  # loadBalancerIP: 1.2.3.4\n  # Optionally configure a JMX port\n  # requires additional javaOpts, ie\n  # javaOpts: \u003e\n  #   -Dcom.sun.management.jmxremote.port=4000\n  #   -Dcom.sun.management.jmxremote.authenticate=false\n  #   -Dcom.sun.management.jmxremote.ssl=false\n  # jmxPort: 4000\n  # Optionally configure other ports to expose in the controller container\n  extraPorts: []\n  # - name: BuildInfoProxy\n  #   port: 9000\n\n  # List of plugins to be install during Jenkins controller start\n  installPlugins:\n    - kubernetes:latest\n    - workflow-aggregator:latest\n    - git:latest\n    - configuration-as-code:latest\n\n  # Set to false to download the minimum required version of all dependencies.\n  installLatestPlugins: true\n\n  # Set to true to download latest dependencies of any plugin that is requested to have the latest version.\n  installLatestSpecifiedPlugins: false\n\n  # List of plugins to install in addition to those listed in controller.installPlugins\n  additionalPlugins: []\n\n  # Enable to initialize the Jenkins controller only once on initial installation.\n  # Without this, whenever the controller gets restarted (Evicted, etc.) it will fetch plugin updates which has the potential to cause breakage.\n  # Note that for this to work, `persistence.enabled` needs to be set to `true`\n  initializeOnce: false\n\n  # Enable to always override the installed plugins with the values of 'controller.installPlugins' on upgrade or redeployment.\n  # overwritePlugins: true\n\n  # Configures if plugins bundled with `controller.image` should be overwritten with the values of 'controller.installPlugins' on upgrade or redeployment.\n  overwritePluginsFromImage: true\n\n  # Enable HTML parsing using OWASP Markup Formatter Plugin (antisamy-markup-formatter), useful with ghprb plugin.\n  # The plugin is not installed by default, please update controller.installPlugins.\n  enableRawHtmlMarkupFormatter: false\n  # Used to approve a list of groovy functions in pipelines used the script-security plugin. Can be viewed under /scriptApproval\n  scriptApproval: []\n  #  - \"method groovy.json.JsonSlurperClassic parseText java.lang.String\"\n  #  - \"new groovy.json.JsonSlurperClassic\"\n  # List of groovy init scripts to be executed during Jenkins controller start\n  initScripts: []\n  #  - |\n  #    print 'adding global pipeline libraries, register properties, bootstrap jobs...'\n\n  # 'name' is a name of an existing secret in same namespace as jenkins,\n  # 'keyName' is the name of one of the keys inside current secret.\n  # the 'name' and 'keyName' are concatenated with a '-' in between, so for example:\n  # an existing secret \"secret-credentials\" and a key inside it named \"github-password\" should be used in Jcasc as ${secret-credentials-github-password}\n  # 'name' and 'keyName' must be lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-',\n  # and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc')\n  additionalExistingSecrets: []\n  #  - name: secret-name-1\n  #    keyName: username\n  #  - name: secret-name-1\n  #    keyName: password\n\n  additionalSecrets: []\n  #  - name: nameOfSecret\n  #    value: secretText\n\n  # Generate SecretClaim resources in order to create Kubernetes secrets from HashiCorp Vault using kube-vault-controller.\n  # 'name' is name of the secret that will be created in Kubernetes. The Jenkins fullname is prepended to this value.\n  # 'path' is the fully qualified path to the secret in Vault\n  # 'type' is an optional Kubernetes secret type. Defaults to 'Opaque'\n  # 'renew' is an optional secret renewal time in seconds\n  secretClaims: []\n  # - name: secretName        # required\n  #   path: testPath          # required\n  #   type: kubernetes.io/tls # optional\n  #   renew: 60               # optional\n\n  # Name of default cloud configuration.\n  cloudName: \"kubernetes\"\n\n  # Below is the implementation of Jenkins Configuration as Code.  Add a key under configScripts for each configuration area,\n  # where each corresponds to a plugin or section of the UI.  Each key (prior to | character) is just a label, and can be any value.\n  # Keys are only used to give the section a meaningful name.  The only restriction is they may only contain RFC 1123 \\ DNS label\n  # characters: lowercase letters, numbers, and hyphens.  The keys become the name of a configuration yaml file on the controller in\n  # /var/jenkins_home/casc_configs (by default) and will be processed by the Configuration as Code Plugin.  The lines after each |\n  # become the content of the configuration yaml file.  The first line after this is a JCasC root element, eg jenkins, credentials,\n  # etc.  Best reference is https://\u003cjenkins_url\u003e/configuration-as-code/reference.  The example below creates a welcome message:\n  JCasC:\n    defaultConfig: true\n    configScripts: {}\n    #  welcome-message: |\n    #    jenkins:\n    #      systemMessage: Welcome to our CI\\CD server.  This Jenkins is configured and managed 'as code'.\n    # Ignored if securityRealm is defined in controller.JCasC.configScripts and\n    # ignored if controller.enableXmlConfig=true as controller.securityRealm takes precedence\n    securityRealm: |-\n      local:\n        allowsSignup: false\n        enableCaptcha: false\n        users:\n        - id: \"${chart-admin-username}\"\n          name: \"Jenkins Admin\"\n          password: \"${chart-admin-password}\"\n    # Ignored if authorizationStrategy is defined in controller.JCasC.configScripts\n    authorizationStrategy: |-\n      loggedInUsersCanDoAnything:\n        allowAnonymousRead: false\n  # Optionally specify additional init-containers\n  customInitContainers: []\n  # - name: custom-init\n  #   image: \"alpine:3.7\"\n  #   imagePullPolicy: Always\n  #   command: [ \"uname\", \"-a\" ]\n\n  sidecars:\n    configAutoReload:\n      # If enabled: true, Jenkins Configuration as Code will be reloaded on-the-fly without a reboot.  If false or not-specified,\n      # jcasc changes will cause a reboot and will only be applied at the subsequent start-up.  Auto-reload uses the\n      # http://\u003cjenkins_url\u003e/reload-configuration-as-code endpoint to reapply config when changes to the configScripts are detected.\n      enabled: true\n      image: kiwigrid/k8s-sidecar:1.15.0\n      imagePullPolicy: IfNotPresent\n      resources: {}\n        #   limits:\n        #     cpu: 100m\n        #     memory: 100Mi\n        #   requests:\n        #     cpu: 50m\n        #     memory: 50Mi\n      # How many connection-related errors to retry on\n      reqRetryConnect: 10\n      # env:\n      #   - name: REQ_TIMEOUT\n      #     value: \"30\"\n      # SSH port value can be set to any unused TCP port.  The default, 1044, is a non-standard SSH port that has been chosen at random.\n      # Is only used to reload jcasc config from the sidecar container running in the Jenkins controller pod.\n      # This TCP port will not be open in the pod (unless you specifically configure this), so Jenkins will not be\n      # accessible via SSH from outside of the pod.  Note if you use non-root pod privileges (runAsUser \u0026 fsGroup),\n      # this must be \u003e 1024:\n      sshTcpPort: 1044\n      # folder in the pod that should hold the collected dashboards:\n      folder: \"/var/jenkins_home/casc_configs\"\n      # If specified, the sidecar will search for JCasC config-maps inside this namespace.\n      # Otherwise the namespace in which the sidecar is running will be used.\n      # It's also possible to specify ALL to search in all namespaces:\n      # searchNamespace:\n      containerSecurityContext:\n        readOnlyRootFilesystem: true\n        allowPrivilegeEscalation: false\n\n    # Allows you to inject additional/other sidecars\n    other: []\n    ## The example below runs the client for https://smee.io as sidecar container next to Jenkins,\n    ## that allows to trigger build behind a secure firewall.\n    ## https://jenkins.io/blog/2019/01/07/webhook-firewalls/#triggering-builds-with-webhooks-behind-a-secure-firewall\n    ##\n    ## Note: To use it you should go to https://smee.io/new and update the url to the generete one.\n    # - name: smee\n    #   image: docker.io/twalter/smee-client:1.0.2\n    #   args: [\"--port\", \"{{ .Values.controller.servicePort }}\", \"--path\", \"/github-webhook/\", \"--url\", \"https://smee.io/new\"]\n    #   resources:\n    #     limits:\n    #       cpu: 50m\n    #       memory: 128Mi\n    #     requests:\n    #       cpu: 10m\n    #       memory: 32Mi\n  # Name of the Kubernetes scheduler to use\n  schedulerName: \"\"\n  # Node labels and tolerations for pod assignment\n  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\n  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature\n  nodeSelector: {}\n\n  terminationGracePeriodSeconds:\n\n  terminationMessagePath:\n  terminationMessagePolicy:\n\n  tolerations: []\n\n  affinity: {}\n  # Leverage a priorityClass to ensure your pods survive resource shortages\n  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n  priorityClassName:\n\n  podAnnotations: {}\n  # Add StatefulSet annotations\n  statefulSetAnnotations: {}\n\n  # StatefulSet updateStrategy\n  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n  updateStrategy: {}\n\n  ingress:\n    enabled: false\n    # Override for the default paths that map requests to the backend\n    paths: []\n    # - backend:\n    #     serviceName: ssl-redirect\n    #     servicePort: use-annotation\n    # - backend:\n    #     serviceName: \u003e-\n    #       {{ template \"jenkins.fullname\" . }}\n    #     # Don't use string here, use only integer value!\n    #     servicePort: 8080\n    # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'\n    # For Kubernetes v1.19+, use 'networking.k8s.io/v1'\n    apiVersion: \"extensions/v1beta1\"\n    labels: {}\n    annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n    # For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\n    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\n    # ingressClassName: nginx\n    # Set this path to jenkinsUriPrefix above or use annotations to rewrite path\n    # path: \"/jenkins\"\n    # configures the hostname e.g. jenkins.example.com\n    hostName:\n    tls:\n    # - secretName: jenkins.cluster.local\n    #   hosts:\n    #     - jenkins.cluster.local\n\n  # often you want to have your controller all locked down and private\n  # but you still want to get webhooks from your SCM\n  # A secondary ingress will let you expose different urls\n  # with a differnt configuration\n  secondaryingress:\n    enabled: false\n    # paths you want forwarded to the backend\n    # ex /github-webhook\n    paths: []\n    # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'\n    # For Kubernetes v1.19+, use 'networking.k8s.io/v1'\n    apiVersion: \"extensions/v1beta1\"\n    labels: {}\n    annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n    # For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\n    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\n    # ingressClassName: nginx\n    # configures the hostname e.g. jenkins-external.example.com\n    hostName:\n    tls:\n    # - secretName: jenkins-external.example.com\n    #   hosts:\n    #     - jenkins-external.example.com\n\n  # If you're running on GKE and need to configure a backendconfig\n  # to finish ingress setup, use the following values.\n  # Docs: https://cloud.google.com/kubernetes-engine/docs/concepts/backendconfig\n  backendconfig:\n    enabled: false\n    apiVersion: \"extensions/v1beta1\"\n    name:\n    labels: {}\n    annotations: {}\n    spec: {}\n\n  # Openshift route\n  route:\n    enabled: false\n    labels: {}\n    annotations: {}\n    # path: \"/jenkins\"\n\n  # controller.hostAliases allows for adding entries to Pod /etc/hosts:\n  # https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n  hostAliases: []\n  # - ip: 192.168.50.50\n  #   hostnames:\n  #     - something.local\n  # - ip: 10.0.50.50\n  #   hostnames:\n  #     - other.local\n\n  # Expose Prometheus metrics\n  prometheus:\n    # If enabled, add the prometheus plugin to the list of plugins to install\n    # https://plugins.jenkins.io/prometheus\n    enabled: false\n    # Additional labels to add to the ServiceMonitor object\n    serviceMonitorAdditionalLabels: {}\n    # Set a custom namespace where to deploy ServiceMonitor resource\n    # serviceMonitorNamespace: monitoring\n    scrapeInterval: 60s\n    # This is the default endpoint used by the prometheus plugin\n    scrapeEndpoint: /prometheus\n    # Additional labels to add to the PrometheusRule object\n    alertingRulesAdditionalLabels: {}\n    # An array of prometheus alerting rules\n    # See here: https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/\n    # The `groups` root object is added by default, simply add the rule entries\n    alertingrules: []\n    # Set a custom namespace where to deploy PrometheusRule resource\n    prometheusRuleNamespace: \"\"\n\n  # Can be used to disable rendering controller test resources when using helm template\n  testEnabled: true\n\n  httpsKeyStore:\n    jenkinsHttpsJksSecretName: ''\n    enable: false\n    httpPort: 8081\n    path: \"/var/jenkins_keystore\"\n    fileName: \"keystore.jks\"\n    password: \"password\"\n    # Convert keystore.jks files content to base64 ( cat keystore.jks | base64 ) and put the output here\n    jenkinsKeyStoreBase64Encoded: |\n        /u3+7QAAAAIAAAABAAAAAQANamVua2luc2NpLmNvbQAAAW2r/b1ZAAAFATCCBP0wDgYKKwYBBAEq\n        AhEBAQUABIIE6QbCqasvoHS0pSwYqSvdydMCB9t+VNfwhFIiiuAelJfO5sSe2SebJbtwHgLcRz1Z\n        gMtWgOSFdl3bWSzA7vrW2LED52h+jXLYSWvZzuDuh8hYO85m10ikF6QR+dTi4jra0whIFDvq3pxe\n        TnESxEsN+DvbZM3jA3qsjQJSeISNpDjO099dqQvHpnCn18lyk7J4TWJ8sOQQb1EM2zDAfAOSqA/x\n        QuPEFl74DlY+5DIk6EBvpmWhaMSvXzWZACGA0sYqa157dq7O0AqmuLG/EI5EkHETO4CrtBW+yLcy\n        2dUCXOMA+j+NjM1BjrQkYE5vtSfNO6lFZcISyKo5pTFlcA7ut0Fx2nZ8GhHTn32CpeWwNcZBn1gR\n        pZVt6DxVVkhTAkMLhR4rL2wGIi/1WRs23ZOLGKtyDNvDHnQyDiQEoJGy9nAthA8aNHa3cfdF10vB\n        Drb19vtpFHmpvKEEhpk2EBRF4fTi644Fuhu2Ied6118AlaPvEea+n6G4vBz+8RWuVCmZjLU+7h8l\n        Hy3/WdUPoIL5eW7Kz+hS+sRTFzfu9C48dMkQH3a6f3wSY+mufizNF9U298r98TnYy+PfDJK0bstG\n        Ph6yPWx8DGXKQBwrhWJWXI6JwZDeC5Ny+l8p1SypTmAjpIaSW3ge+KgcL6Wtt1R5hUV1ajVwVSUi\n        HF/FachKqPqyLJFZTGjNrxnmNYpt8P1d5JTvJfmfr55Su/P9n7kcyWp7zMcb2Q5nlXt4tWogOHLI\n        OzEWKCacbFfVHE+PpdrcvCVZMDzFogIq5EqGTOZe2poPpBVE+1y9mf5+TXBegy5HToLWvmfmJNTO\n        NCDuBjgLs2tdw2yMPm4YEr57PnMX5gGTC3f2ZihXCIJDCRCdQ9sVBOjIQbOCzxFXkVITo0BAZhCi\n        Yz61wt3Ud8e//zhXWCkCsSV+IZCxxPzhEFd+RFVjW0Nm9hsb2FgAhkXCjsGROgoleYgaZJWvQaAg\n        UyBzMmKDPKTllBHyE3Gy1ehBNGPgEBChf17/9M+j8pcm1OmlM434ctWQ4qW7RU56//yq1soFY0Te\n        fu2ei03a6m68fYuW6s7XEEK58QisJWRAvEbpwu/eyqfs7PsQ+zSgJHyk2rO95IxdMtEESb2GRuoi\n        Bs+AHNdYFTAi+GBWw9dvEgqQ0Mpv0//6bBE/Fb4d7b7f56uUNnnE7mFnjGmGQN+MvC62pfwfvJTT\n        EkT1iZ9kjM9FprTFWXT4UmO3XTvesGeE50sV9YPm71X4DCQwc4KE8vyuwj0s6oMNAUACW2ClU9QQ\n        y0tRpaF1tzs4N42Q5zl0TzWxbCCjAtC3u6xf+c8MCGrr7DzNhm42LOQiHTa4MwX4x96q7235oiAU\n        iQqSI/hyF5yLpWw4etyUvsx2/0/0wkuTU1FozbLoCWJEWcPS7QadMrRRISxHf0YobIeQyz34regl\n        t1qSQ3dCU9D6AHLgX6kqllx4X0fnFq7LtfN7fA2itW26v+kAT2QFZ3qZhINGfofCja/pITC1uNAZ\n        gsJaTMcQ600krj/ynoxnjT+n1gmeqThac6/Mi3YlVeRtaxI2InL82ZuD+w/dfY9OpPssQjy3xiQa\n        jPuaMWXRxz/sS9syOoGVH7XBwKrWpQcpchozWJt40QV5DslJkclcr8aC2AGlzuJMTdEgz1eqV0+H\n        bAXG9HRHN/0eJTn1/QAAAAEABVguNTA5AAADjzCCA4swggJzAhRGqVxH4HTLYPGO4rzHcCPeGDKn\n        xTANBgkqhkiG9w0BAQsFADCBgTELMAkGA1UEBhMCY2ExEDAOBgNVBAgMB29udGFyaW8xEDAOBgNV\n        BAcMB3Rvcm9udG8xFDASBgNVBAoMC2plbmtpbnN0ZXN0MRkwFwYDVQQDDBBqZW5raW5zdGVzdC5p\n        bmZvMR0wGwYJKoZIhvcNAQkBFg50ZXN0QHRlc3QuaW5mbzAeFw0xOTEwMDgxNTI5NTVaFw0xOTEx\n        MDcxNTI5NTVaMIGBMQswCQYDVQQGEwJjYTEQMA4GA1UECAwHb250YXJpbzEQMA4GA1UEBwwHdG9y\n        b250bzEUMBIGA1UECgwLamVua2luc3Rlc3QxGTAXBgNVBAMMEGplbmtpbnN0ZXN0LmluZm8xHTAb\n        BgkqhkiG9w0BCQEWDnRlc3RAdGVzdC5pbmZvMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\n        AQEA02q352JTHGvROMBhSHvSv+vnoOTDKSTz2aLQn0tYrIRqRo+8bfmMjXuhkwZPSnCpvUGNAJ+w\n        Jrt/dqMoYUjCBkjylD/qHmnXN5EwS1cMg1Djh65gi5JJLFJ7eNcoSsr/0AJ+TweIal1jJSP3t3PF\n        9Uv21gm6xdm7HnNK66WpUUXLDTKaIs/jtagVY1bLOo9oEVeLN4nT2CYWztpMvdCyEDUzgEdDbmrP\n        F5nKUPK5hrFqo1Dc5rUI4ZshL3Lpv398aMxv6n2adQvuL++URMEbXXBhxOrT6rCtYzbcR5fkwS9i\n        d3Br45CoWOQro02JAepoU0MQKY5+xQ4Bq9Q7tB9BAwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAe\n        4xc+mSvKkrKBHg9/zpkWgZUiOp4ENJCi8H4tea/PCM439v6y/kfjT/okOokFvX8N5aa1OSz2Vsrl\n        m8kjIc6hiA7bKzT6lb0EyjUShFFZ5jmGVP4S7/hviDvgB5yEQxOPpumkdRP513YnEGj/o9Pazi5h\n        /MwpRxxazoda9r45kqQpyG+XoM4pB+Fd3JzMc4FUGxfVPxJU4jLawnJJiZ3vqiSyaB0YyUL+Er1Q\n        6NnqtR4gEBF0ZVlQmkycFvD4EC2boP943dLqNUvop+4R3SM1QMM6P5u8iTXtHd/VN4MwMyy1wtog\n        hYAzODo1Jt59pcqqKJEas0C/lFJEB3frw4ImNx5fNlJYOpx+ijfQs9m39CevDq0=\n\nagent:\n  enabled: true\n  defaultsProviderTemplate: \"\"\n  # URL for connecting to the Jenkins contoller\n  jenkinsUrl:\n  # connect to the specified host and port, instead of connecting directly to the Jenkins controller\n  jenkinsTunnel:\n  kubernetesConnectTimeout: 5\n  kubernetesReadTimeout: 15\n  maxRequestsPerHostStr: \"32\"\n  namespace:\n  image: \"jenkins/inbound-agent\"\n  tag: \"4.11.2-4\"\n  workingDir: \"/home/jenkins/agent\"\n  nodeUsageMode: \"NORMAL\"\n  customJenkinsLabels: []\n  # name of the secret to be used for image pulling\n  imagePullSecretName:\n  componentName: \"jenkins-agent\"\n  websocket: false\n  privileged: false\n  runAsUser:\n  runAsGroup:\n  resources:\n    requests:\n      cpu: \"512m\"\n      memory: \"512Mi\"\n    limits:\n      cpu: \"512m\"\n      memory: \"512Mi\"\n  # You may want to change this to true while testing a new image\n  alwaysPullImage: false\n  # Controls how agent pods are retained after the Jenkins build completes\n  # Possible values: Always, Never, OnFailure\n  podRetention: \"Never\"\n  # Disable if you do not want the Yaml the agent pod template to show up\n  # in the job Console Output. This can be helpful for either security reasons\n  # or simply to clean up the output to make it easier to read.\n  showRawYaml: true\n  # You can define the volumes that you want to mount for this container\n  # Allowed types are: ConfigMap, EmptyDir, HostPath, Nfs, PVC, Secret\n  # Configure the attributes as they appear in the corresponding Java class for that type\n  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes\n  volumes: []\n  # - type: ConfigMap\n  #   configMapName: myconfigmap\n  #   mountPath: /var/myapp/myconfigmap\n  # - type: EmptyDir\n  #   mountPath: /var/myapp/myemptydir\n  #   memory: false\n  # - type: HostPath\n  #   hostPath: /var/lib/containers\n  #   mountPath: /var/myapp/myhostpath\n  # - type: Nfs\n  #   mountPath: /var/myapp/mynfs\n  #   readOnly: false\n  #   serverAddress: \"192.0.2.0\"\n  #   serverPath: /var/lib/containers\n  # - type: PVC\n  #   claimName: mypvc\n  #   mountPath: /var/myapp/mypvc\n  #   readOnly: false\n  # - type: Secret\n  #   defaultMode: \"600\"\n  #   mountPath: /var/myapp/mysecret\n  #   secretName: mysecret\n  # Pod-wide environment, these vars are visible to any container in the agent pod\n\n  # You can define the workspaceVolume that you want to mount for this container\n  # Allowed types are: DynamicPVC, EmptyDir, HostPath, Nfs, PVC\n  # Configure the attributes as they appear in the corresponding Java class for that type\n  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes/workspace\n  workspaceVolume: {}\n  ## DynamicPVC example\n  # type: DynamicPVC\n  # configMapName: myconfigmap\n  ## EmptyDir example\n  # type: EmptyDir\n  # memory: false\n  ## HostPath example\n  # type: HostPath\n  # hostPath: /var/lib/containers\n  ## NFS example\n  # type: Nfs\n  # readOnly: false\n  # serverAddress: \"192.0.2.0\"\n  # serverPath: /var/lib/containers\n  ## PVC example\n  # type: PVC\n  # claimName: mypvc\n  # readOnly: false\n  #\n  # Pod-wide environment, these vars are visible to any container in the agent pod\n  envVars: []\n  # - name: PATH\n  #   value: /usr/local/bin\n  nodeSelector: {}\n  # Key Value selectors. Ex:\n  # jenkins-agent: v1\n\n  # Executed command when side container gets started\n  command:\n  args: \"${computer.jnlpmac} ${computer.name}\"\n  # Side container name\n  sideContainerName: \"jnlp\"\n  # Doesn't allocate pseudo TTY by default\n  TTYEnabled: false\n  # Max number of spawned agent\n  containerCap: 10\n  # Pod name\n  podName: \"default\"\n  # Allows the Pod to remain active for reuse until the configured number of\n  # minutes has passed since the last step was executed on it.\n  idleMinutes: 0\n  # Raw yaml template for the Pod. For example this allows usage of toleration for agent pods.\n  # https://github.com/jenkinsci/kubernetes-plugin#using-yaml-to-define-pod-templates\n  # https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  yamlTemplate: \"\"\n  # yamlTemplate: |-\n  #   apiVersion: v1\n  #   kind: Pod\n  #   spec:\n  #     tolerations:\n  #     - key: \"key\"\n  #       operator: \"Equal\"\n  #       value: \"value\"\n  # Defines how the raw yaml field gets merged with yaml definitions from inherited pod templates: merge or override\n  yamlMergeStrategy: \"override\"\n  # Timeout in seconds for an agent to be online\n  connectTimeout: 100\n  # Annotations to apply to the pod.\n  annotations: {}\n\n  # Below is the implementation of custom pod templates for the default configured kubernetes cloud.\n  # Add a key under podTemplates for each pod template. Each key (prior to | character) is just a label, and can be any value.\n  # Keys are only used to give the pod template a meaningful name.  The only restriction is they may only contain RFC 1123 \\ DNS label\n  # characters: lowercase letters, numbers, and hyphens. Each pod template can contain multiple containers.\n  # For this pod templates configuration to be loaded the following values must be set:\n  # controller.JCasC.defaultConfig: true\n  # Best reference is https://\u003cjenkins_url\u003e/configuration-as-code/reference#Cloud-kubernetes. The example below creates a python pod template.\n  podTemplates: {}\n  #  python: |\n  #    - name: python\n  #      label: jenkins-python\n  #      serviceAccount: jenkins\n  #      containers:\n  #        - name: python\n  #          image: python:3\n  #          command: \"/bin/sh -c\"\n  #          args: \"cat\"\n  #          ttyEnabled: true\n  #          privileged: true\n  #          resourceRequestCpu: \"400m\"\n  #          resourceRequestMemory: \"512Mi\"\n  #          resourceLimitCpu: \"1\"\n  #          resourceLimitMemory: \"1024Mi\"\n\n# Here you can add additional agents\n# They inherit all values from `agent` so you only need to specify values which differ\nadditionalAgents: {}\n#  maven:\n#    podName: maven\n#    customJenkinsLabels: maven\n#    # An example of overriding the jnlp container\n#    # sideContainerName: jnlp\n#    image: jenkins/jnlp-agent-maven\n#    tag: latest\n#  python:\n#    podName: python\n#    customJenkinsLabels: python\n#    sideContainerName: python\n#    image: python\n#    tag: \"3\"\n#    command: \"/bin/sh -c\"\n#    args: \"cat\"\n#    TTYEnabled: true\n\npersistence:\n  enabled: true\n  ## A manually managed Persistent Volume and Claim\n  ## Requires persistence.enabled: true\n  ## If defined, PVC must be created manually before volume will be bound\n  existingClaim: eks-efs-pvc\n  ## jenkins data Persistent Volume Storage Class\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  storageClass:\n  annotations: {}\n  labels: {}\n  accessMode: \"ReadWriteOnce\"\n  size: \"5Gi\"\n  volumes:\n  #  - name: nothing\n  #    emptyDir: {}\n  mounts:\n  #  - mountPath: /var/nothing\n  #    name: nothing\n  #    readOnly: true\n\nnetworkPolicy:\n  # Enable creation of NetworkPolicy resources.\n  enabled: false\n  # For Kubernetes v1.4, v1.5 and v1.6, use 'extensions/v1beta1'\n  # For Kubernetes v1.7, use 'networking.k8s.io/v1'\n  apiVersion: networking.k8s.io/v1\n  # You can allow agents to connect from both within the cluster (from within specific/all namespaces) AND/OR from a given external IP range\n  internalAgents:\n    allowed: true\n    podLabels: {}\n    namespaceLabels: {}\n      # project: myproject\n  externalAgents: {}\n  #   ipCIDR: 172.17.0.0/16\n  #   except:\n  #     - 172.17.1.0/24\n\n## Install Default RBAC roles and bindings\nrbac:\n  create: true\n  readSecrets: false\n\nserviceAccount:\n  create: true\n  # The name of the service account is autogenerated by default\n  name: jenkins\n  annotations: {}\n  imagePullSecretName:\n\n\nserviceAccountAgent:\n  # Specifies whether a ServiceAccount should be created\n  create: false\n  # The name of the ServiceAccount to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name:\n  annotations: {}\n  imagePullSecretName:\n\n## Backup cronjob configuration\n## Ref: https://github.com/maorfr/kube-tasks\nbackup:\n  # Backup must use RBAC\n  # So by enabling backup you are enabling RBAC specific for backup\n  enabled: false\n  # Used for label app.kubernetes.io/component\n  componentName: \"backup\"\n  # Schedule to run jobs. Must be in cron time format\n  # Ref: https://crontab.guru/\n  schedule: \"0 2 * * *\"\n  labels: {}\n  serviceAccount:\n    create: true\n    name:\n    annotations: {}\n    # Example for authorization to AWS S3 using kube2iam or IRSA\n    # Can also be done using environment variables\n    # iam.amazonaws.com/role: \"jenkins\"\n    # \"eks.amazonaws.com/role-arn\": \"arn:aws:iam::123456789012:role/jenkins-backup\"\n  # Set this to terminate the job that is running/failing continously and set the job status to \"Failed\"\n  activeDeadlineSeconds: \"\"\n  image:\n    repository: \"maorfr/kube-tasks\"\n    tag: \"0.2.0\"\n  # Additional arguments for kube-tasks\n  # Ref: https://github.com/maorfr/kube-tasks#simple-backup\n  extraArgs: []\n  # Add existingSecret for AWS credentials\n  existingSecret: {}\n  ## Example for using an existing secret\n   # jenkinsaws:\n  ## Use this key for AWS access key ID\n     # awsaccesskey: jenkins_aws_access_key\n  ## Use this key for AWS secret access key\n     # awssecretkey: jenkins_aws_secret_key\n  # Add additional environment variables\n   # jenkinsgcp:\n  ## Use this key for GCP credentials\n     # gcpcredentials: credentials.json\n  env: []\n  # Example environment variable required for AWS credentials chain\n  # - name: \"AWS_REGION\"\n  #   value: \"us-east-1\"\n  resources:\n    requests:\n      memory: 1Gi\n      cpu: 1\n    limits:\n      memory: 1Gi\n      cpu: 1\n  # Destination to store the backup artifacts\n  # Supported cloud storage services: AWS S3, Minio S3, Azure Blob Storage, Google Cloud Storage\n  # Additional support can added. Visit this repository for details\n  # Ref: https://github.com/maorfr/skbn\n  destination: \"s3://jenkins-data/backup\"\n  # By enabling only the jenkins_home/jobs folder gets backed up, not the whole jenkins instance\n  onlyJobs: false\n  # Enable backup pod security context (must be `true` if runAsUser or fsGroup are set)\n  usePodSecurityContext: true\n  # When setting runAsUser to a different value than 0 also set fsGroup to the same value:\n  runAsUser: 1000\n  fsGroup: 1000\n  securityContextCapabilities: {}\n  #  drop:\n  #    - NET_RAW\ncheckDeprecation: true\n\nawsSecurityGroupPolicies:\n  enabled: false\n  policies:\n    - name: \"\"\n      securityGroupIds: []\n      podSelector: {}\n"
            ],
            "verify": false,
            "version": "3.11.10",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
